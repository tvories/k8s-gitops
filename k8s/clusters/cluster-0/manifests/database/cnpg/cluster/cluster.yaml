# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
# Example of PostgreSQL cluster
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres2
  namespace: database
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:15.6-v0.2.1
  enableSuperuserAccess: true

  storage:
    size: 75Gi
    storageClass: local-hostpath
  superuserSecret:
    name: cloudnative-pg-secret

  postgresql:
    shared_preload_libraries:
      - "vectors.so"
      # - vchord.so
    parameters:
      max_connections: "300"
      shared_buffers: 512MB
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all
  monitoring:
    enablePodMonitor: true

  # Example of rolling update strategy:
  # - unsupervised: automated update of the primary once all
  #                 replicas have been upgraded (default)
  # - supervised: requires manual supervision to perform
  #               the switchover of the primary
  primaryUpdateStrategy: unsupervised

  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    # limits:
    #   cpu: 250m
    #   memory: 640Mi

  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: gzip
        maxParallel: 12
      destinationPath: s3://cnpg/
      endpointURL: https://s3.nas.t-vo.us:443
      serverName: &currentCluster postgres2
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key

  bootstrap:
    # initdb:
    #   postInitSQL:
    #     - CREATE EXTENSION IF NOT EXISTS vchord CASCADE;
    recovery:
      source: &previous-cluster postgres

  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # Disabled until first cluster goes up
  externalClusters:
    - name: *previous-cluster
      barmanObjectStore:
        destinationPath: s3://cnpg/
        endpointURL: https://s3.nas.t-vo.us:443
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: aws-access-key-id
          secretAccessKey:
            name: cloudnative-pg-secret
            key: aws-secret-access-key
        wal:
          compression: gzip
          maxParallel: 12
