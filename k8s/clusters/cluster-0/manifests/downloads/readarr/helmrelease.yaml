# yaml-language-server: $schema=https://raw.githubusercontent.com/axeII/crds/main/helmrelease_v2beta2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: readarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      readarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: readarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/readarr
              tag: 0.4.18@sha256:8f7551205fbdccd526db23a38a6fba18b0f40726e63bb89be0fb2333ff4ee4cd

            env:
              TZ: "${TIMEZONE}"
              READARR__INSTANCE_NAME: Readarr
              READARR__PORT: &port 8787
              READARR__LOG_LEVEL: info
              READARR__THEME: dark

            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 15m
                memory: 184M
              limits:
                memory: 2Gi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65539
              - 10000

    service:
      app:
        controller: readarr
        ports:
          http:
            port: *port

    ingress:
      app:
        className: "nginx-internal"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: &tls tls.readarr
            hosts:
              - *host

      api:
        enabled: true
        className: "nginx-internal"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: *tls

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config
      media:
        enabled: true
        existingClaim: downloads-nfs-media
        globalMounts:
          - path: /media
      backup:
        enabled: true
        existingClaim: readarr-nfs-backup
        globalMounts:
          - path: /config/Backups
