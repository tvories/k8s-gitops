---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cilium
  namespace: kube-system
spec:
  interval: 15m
  timeout: 30m
  chart:
    spec:
      chart: cilium
      version: 1.15.12
      sourceRef:
        kind: HelmRepository
        name: cilium-charts
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 2
  upgrade:
    remediation:
      retries: 2
  valuesFrom:
    - kind: ConfigMap
      name: cilium-values
  values:
    routingMode: native
    tunnel: disabled
    l7proxy: false
    # securityContext:
    #   privileged: true
    # cluster:
    #   name: "${CLUSTER_NAME}"
    #   id: "${CLUSTER_ID}"

    # rollOutCiliumPods: true

    # localRedirectPolicy: true

    # kubeProxyReplacement: "strict"
    # kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256

    # ipv4NativeRoutingCIDR: ${NETWORK_K8S_POD_CIDR}

    # k8sServiceHost: "cluster-0.${SECRET_INTERNAL_DOMAIN}"
    # k8sServicePort: 6443

    # loadBalancer:
    #   algorithm: "maglev"
    #   mode: "dsr"

    # tunnel: "disabled"

    # autoDirectNodeRoutes: true

    # endpointRoutes:
    #   enabled: true

    # ipam:
    #   mode: "kubernetes"

    # containerRuntime:
    #   integration: containerd

    cni:
      exclusive: false # Needed to allow Cillium to work with Multus

    hubble:
      enabled: true
      serviceMonitor:
        enabled: true
      dashboards:
        enabled: true
        label: grafana_dashboard
        namespace: monitoring
        labelValue: "1"
        annotations: {}
      # metrics:
      #   enabled:
      #     - dns:query;ignoreAAAA
      #     - drop
      #     - tcp
      #     - flow
      #     - port-distribution
      #     - icmp
      #     - http
      # relay:
      #   enabled: true
      #   rollOutPods: true
      #   prometheus:
      #     enabled: true
      relay:
        prometheus:
          serviceMonitor:
            enabled: true
      ui:
        enabled: true
        # rollOutPods: true
        ingress:
          enabled: true
          className: nginx-internal
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production
            # kubernetes.io/ingress.class: nginx
          hosts:
            - "hubble.${CLUSTER_NAME}.${SECRET_DOMAIN}"
          tls:
            - secretName: hubble-tls
              hosts:
                - "hubble.${CLUSTER_NAME}.${SECRET_DOMAIN}"

    prometheus:
      serviceMonitor:
        enabled: true

    operator:
      prometheus:
        serviceMonitor:
          enabled: true

    # bgp:
    #   enabled: false
    #   announce:
    #     loadbalancerIP: true
