---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.0.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
  namespace: selfhosted
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      convertx:
        pod:
          securityContext:
            runAsUser: &uid 568
            runAsGroup: *uid
            fsGroup: *uid
            fsGroupChangePolicy: OnRootMismatch
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/c4illin/convertx
              tag: v0.13.0
            env:
              TZ: ${CONFIG_TIMEZONE}
              ACCOUNT_REGISTRATION: false
              HTTP_ALLOWED: false
              ALLOW_UNAUTHENTICATED: true
              AUTO_DELETE_EVERY_N_HOURS: 1
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

    service:
      app:
        controller: convertx
        ports:
          http:
            port: *port

    ingress:
      app:
        className: "nginx-internal"
        hosts:
          - host: &host "convertx.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: tls.convertx
            hosts:
              - *host

    persistence:
      data:
        existingClaim: convertx-data
        globalMounts:
          - - path: /app/data
      tmp:
        type: emptyDir
