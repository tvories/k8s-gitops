---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: hashi-vault
  namespace: selfhosted
spec:
  interval: 5m
  chart:
    spec:
      chart: vault
      version: 0.30.0
      sourceRef:
        kind: HelmRepository
        name: hashicorp-charts
        namespace: flux-system
  values:
    global:
      enabled: true
      # tlsDisable: false
    injector:
      agentImage:
        repository: "hashicorp/vault"
        tag: "1.19.1"
    server:
      image:
        repository: "hashicorp/vault"
        tag: "1.19.1"
      dataStorage:
        enabled: true
        storageClass: "ceph-block"
      auditStorage:
        enabled: true
        storageClass: "ceph-block"
      extraEnvironmentVars:
        GOOGLE_APPLICATION_CREDENTIALS: /vault/userconfig/kms-vault/account.json
        GOOGLE_PROJECT: taylor-cloud
        GOOGLE_REGION: global
      extraVolumes:
        - type: secret
          name: kms-vault
          path: /vault/userconfig
      #   - type: secret
      #     name:
      # extraArgs: "-config=/vault/userconfig/"
      # resources:
      #   requests:
      #     memory: 256Mi
      #     cpu: 250m
      #   limits:
      #     memory: 256Mi
      readinessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
      livenessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true"
        initialDelaySeconds: 60
      standalone:
        enabled: false
      ha:
        enabled: true
        replicas: 3
        raft:
          enabled: true
          setNodeId: true
          config: |
            ui = true
            listener "tcp" {
              tls_disable = 1
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              telemetry {
                unauthenticated_metrics_access = "true"
              }
            }
            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "http://hashi-vault-0.hashi-vault-internal:8200"
              }
              retry_join {
                leader_api_addr = "http://hashi-vault-1.hashi-vault-internal:8200"
              }
              retry_join {
                leader_api_addr = "http://hashi-vault-2.hashi-vault-internal:8200"
              }

            autopilot {
                cleanup_dead_servers = "true"
                last_contact_threshold = "200ms"
                last_contact_failure_threshold = "10m"
                max_trailing_logs = 250000
                min_quorum = 3
                server_stabilization_time = "10s"
              }
            }
            seal "gcpckms" {
              project     = "taylor-cloud"
              region      = "global"
              key_ring    = "vault-unseal"
              crypto_key  = "vault-key"
            }
            telemetry {
              prometheus_retention_time = "24h",
              disable_hostname = true
            }
            service_registration "kubernetes" {}
      ingress:
        enabled: true
        ingressClassName: "nginx-internal"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &host vault.${SECRET_DOMAIN}
            paths:
              - /
        tls:
          - secretName: tls.hashi-vault
            hosts:
              - *host
    ui:
      enabled: true
      # serviceType: LoadBalancer
      # loadBalancerIP: ${LB_VAULT}
      # externalTrafficPolicy: Local
      # externalPort: 443

    resources:
      requests:
        cpu: 49m
        memory: 79M
      # limits:
      #   memory: 508M
