---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: selfhosted
spec:
  releaseName: nextcloud
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 6.6.3
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
  install:
    timeout: 60m
  upgrade:
    timeout: 60m
  values:
    deploymentAnnotations:
      secret.reloader.stakater.com/reload: &secret nextcloud-secret
    image:
      repository: nextcloud
      tag: 30.0.5-fpm

    ingress:
      enabled: true
      className: "nginx-external"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For, X-Real-IP, X-Frame-Options, X-Content-Type-Options, X-Forwarded-Proto"
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/webfinger {
            return 301 $scheme://$host/index.php/.well-known/webfinger;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - &host nc.${SECRET_DOMAIN}
          secretName: tls.nextcloud

    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.6
          envFrom:
            - secretRef:
                name: *secret

      existingSecret:
        enabled: true
        secretName: *secret
        usernameKey: ADMIN_USER
        passwordKey: ADMIN_PASS
        # tokenKey: METRICS_TOKEN
        smtpHostKey: SMTP_HOST
        smtpUsernameKey: SMTP_USER
        smtpPasswordKey: SMTP_PASS

      host: *host
      # username: admin
      # password: ${SECRET_NEXTCLOUD_ADMIN_PASSWORD}
      mail:
        enabled: true
        fromAddress: nc
        domain: ${SECRET_DOMAIN}
        smtp:
          # host: ${SECRET_SMTP_HOST}
          secure: ssl
          port: 465
          authtype: LOGIN
          # name: ${SECRET_NEXTCLOUD_MAIL_USER}
          # password: ${SECRET_NEXTCLOUD_MAIL_PASSWORD}
      configs:
        local.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' =>
            array (
              0 => '127.0.0.1',
              1 => '10.96.0.0/12',
              2 => '10.244.0.0/16',
            ),
            'forwarded_for_headers' =>
            array (
              0 => 'HTTP_X_FORWARDED_FOR',
            ),
            'default_phone_region' => 'US',
            'trashbin_retention_obligation' => 'auto, 30',
            'auth.bruteforce.protection.enabled' => true,
          );

      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
        www.conf: |
          [www]
          user = www-data
          group = www-data
          listen = 127.0.0.1:9000
          pm = dynamic
          pm.max_children = 57
          pm.start_servers = 14
          pm.min_spare_servers = 14
          pm.max_spare_servers = 42
          pm.max_requests = 500
          pm.process_idle_timeout = 10s

      extraVolumes:
        - name: media
          nfs:
            server: ${SECRET_NAS3}
            path: /ook/Media
        - name: photos
          nfs:
            server: ${SECRET_NAS3}
            path: /ook/Photos
      extraVolumeMounts:
        - name: media
          mountPath: /media
        - name: photos
          mountPath: /photos

    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true
      image:
        repository: nginx
        tag: "1.27.3"
      config:
        default: true
      resources:
        requests:
          cpu: 50m
          memory: 20Mi
        # limits:
        #   memory: 100Mi

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      # host: postgres.database
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: *secret
        hostKey: POSTGRES_HOST
        databaseKey: POSTGRES_DB
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASSWORD
      # password: ${SECRET_NEXTCLOUD_DB_PASSWORD}
      # user: ncuser

    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: true
        existingSecret: *secret
        existingSecretPasswordKey: REDIS_PASSWORD
      master:
        persistence:
          enabled: false
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            memory: 100Mi
      commonConfiguration: |-
        # Enable AOF https://redis.io/topics/persistence#append-only-file
        appendonly yes
        # Disable RDB persistence, AOF persistence already enabled.
        save ""
        maxmemory 94371840
        maxmemory-policy allkeys-lru
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          # limits:
          #   memory: 20Mi

    postgresql:
      enabled: false

    cronjob:
      enabled: true
      # failedJobsHistoryLimit: 1
      # successfulJobsHistoryLimit: 1

    persistence:
      enabled: true
      # accessMode: ReadWriteMany
      # size: 1Mi
      existingClaim: nextcloud-nfs-config
      # nextcloudData:
      #   enabled: true
      #   existingClaim: nextcloud-nfs-data

    startupProbe:
      enabled: false
      initialDelaySeconds: 7200
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 60
      successThreshold: 1
    livenessProbe:
      enabled: false
      initialDelaySeconds: 7200
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: false
      initialDelaySeconds: 7200
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1

    resources:
      requests:
        cpu: 200m
        memory: 250M
      # limits:
      #   memory: 508M
